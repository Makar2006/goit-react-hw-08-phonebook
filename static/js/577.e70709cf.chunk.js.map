{"version":3,"file":"static/js/577.e70709cf.chunk.js","mappings":"6PAkBA,EAhBiB,WACf,OACEA,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAO,CAACC,GAAG,IAAGH,SAAC,UAChBF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAO,CAACC,GAAG,YAAWH,SAAC,gBAE1BC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAO,CAACC,GAAG,SAAQH,SAAC,iBAK/B,E,oBCIA,EAdiB,WACf,IAAMI,GAAWC,EAAAA,EAAAA,MACTC,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IAArBF,KACR,OACER,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAO,CAACC,GAAG,YAAWH,SAAC,cACxBF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAIM,KACJL,EAAAA,EAAAA,KAAA,UAAQQ,QAAS,kBAAML,GAASM,EAAAA,EAAAA,MAAS,EAACV,SAAC,iBAInD,EC6BA,EAnCe,WACb,IAAMW,GAAaJ,EAAAA,EAAAA,IAAYK,EAAAA,IACzBC,GAAYN,EAAAA,EAAAA,IAAYO,EAAAA,IAE9BC,GAA8CC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtDI,EAAeF,EAAA,GAAEG,EAAkBH,EAAA,IAE1CI,EAAAA,EAAAA,YAAU,WAIR,OAHAD,GAAmB,GAEnBE,OAAOC,iBAAiB,SAAUC,GAC3B,WACLF,OAAOG,oBAAoB,SAAUD,EACvC,CACF,GAAG,IAEH,IAAMA,EAAe,WACnB,IAAME,EAAiBJ,OAAOK,QAG5BP,EADEM,GAAkB,GAAKA,GAAkB,GAK/C,EAEA,OACE5B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,UAAQ2B,UAAS,UAAAC,OAAYV,EAAkB,UAAY,UAAWnB,UACpEC,EAAAA,EAAAA,KAAA,OAAAD,UAAMC,EAAAA,EAAAA,KAAA,OAAAD,SAAMW,GAAaV,EAAAA,EAAAA,KAAC6B,EAAQ,KAAM7B,EAAAA,EAAAA,KAAC8B,EAAQ,WAEnD9B,EAAAA,EAAAA,KAAA,QAAAD,SAAOa,GAAYZ,EAAAA,EAAAA,KAAC+B,EAAAA,EAAO,KAAM/B,EAAAA,EAAAA,KAACgC,EAAAA,GAAM,QAG9C,C,uGC7CO,IAAMzB,EAAa,SAAA0B,GAAK,OAAIA,EAAMC,KAAKC,IAAK,EAEtCtB,EAAgB,SAAAoB,GAAK,OAAIA,EAAMC,KAAKtB,SAAU,EAC9CD,EAAmB,SAAAsB,GAAK,OAAIA,EAAMC,KAAKxB,UAAW,C","sources":["components/Menu/Menu.jsx","components/UserMenu/UserMenu.jsx","components/Header/Header.jsx","redux/authSelectors.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\n\nconst AuthMenu = () => {\n  return (\n    <>\n      <NavLink to=\"/\">Home</NavLink>\n      <ul>\n        <li>\n          <NavLink to=\"/register\">Register</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/login\">Login</NavLink>\n        </li>\n      </ul>\n    </>\n  );\n};\n\nexport default AuthMenu;\n","import { NavLink } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { logOut } from '../../redux/auth';\nimport { selectUser } from '../../redux/authSelectors';\n\nconst UserMenu = () => {\n  const dispatch = useDispatch();\n  const { name } = useSelector(selectUser);\n  return (\n    <>\n      <NavLink to=\"/contacts\">Contacts</NavLink>\n      <div>\n        <p>{name}</p>\n        <button onClick={() => dispatch(logOut())}>Log out</button>\n      </div>\n    </>\n  );\n};\n\nexport default UserMenu;\n","import { useSelector } from 'react-redux';\nimport { Outlet } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\n\nimport { selectIsLoggedIn, selectLoading } from '../../redux/authSelectors';\n\nimport AuthMenu from 'components/Menu/Menu';\nimport Loading from 'components/Loader/Loader';\nimport UserMenu from 'components/UserMenu/UserMenu';\n\nimport './Header.css';\n\nconst Header = () => {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const isLoading = useSelector(selectLoading);\n\n  const [isHeaderVisible, setIsHeaderVisible] = useState(false);\n\n  useEffect(() => {\n    setIsHeaderVisible(true);\n\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  const handleScroll = () => {\n    const scrollPosition = window.scrollY;\n\n    if (scrollPosition >= 0 && scrollPosition <= 25) {\n      setIsHeaderVisible(true);\n    } else {\n      setIsHeaderVisible(false);\n    }\n  };\n\n  return (\n    <>\n      <header className={`header ${isHeaderVisible ? 'visible' : 'hidden'}`}>\n        <div>{<nav>{isLoggedIn ? <UserMenu /> : <AuthMenu />}</nav>}</div>\n      </header>\n      <main>{isLoading ? <Loading /> : <Outlet />}</main>\n    </>\n  );\n};\n\nexport default Header;\n","export const selectUser = state => state.auth.user;\nexport const selectError = state => state.auth.error;\nexport const selectLoading = state => state.auth.isLoading;\nexport const selectIsLoggedIn = state => state.auth.isLoggedIn;\nexport const selectIsRefreshing = state => state.auth.isRefreshing;\n"],"names":["_jsxs","_Fragment","children","_jsx","NavLink","to","dispatch","useDispatch","name","useSelector","selectUser","onClick","logOut","isLoggedIn","selectIsLoggedIn","isLoading","selectLoading","_useState","useState","_useState2","_slicedToArray","isHeaderVisible","setIsHeaderVisible","useEffect","window","addEventListener","handleScroll","removeEventListener","scrollPosition","scrollY","className","concat","UserMenu","AuthMenu","Loading","Outlet","state","auth","user"],"sourceRoot":""}