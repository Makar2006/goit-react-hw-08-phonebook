{"version":3,"file":"static/js/885.20e05c0c.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","components/pages/ContactsPage.jsx","redux/authSelectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"ContactForm_contactForm__y0Rca\",\"formSpan\":\"ContactForm_formSpan__bT33Q\",\"formButton\":\"ContactForm_formButton__TN6Jq\",\"contactInput\":\"ContactForm_contactInput__z6XOX\"};","import { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport css from './ContactForm.module.css';\nimport { addContact } from '../../redux/contactsOperations';\n\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\n\nconst schema = yup\n  .object({\n    name: yup.string().min(4).max(15).required(),\n    number: yup.string().min(5).max(18).required(),\n  })\n  .required();\n\nexport default function ContactForm() {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n  const { items } = useSelector(state => state.contacts);\n\n  const dispatch = useDispatch();\n\n  const onSubmit = data => {\n    if (\n      items.find(({ name }) => name.toLowerCase() === data.name.toLowerCase())\n    ) {\n      alert(`${data.name} is already in contacts`);\n      reset();\n      return;\n    }\n\n    dispatch(addContact(data));\n\n    reset();\n  };\n\n  return (\n    <div>\n      <form className={css.contactForm} onSubmit={handleSubmit(onSubmit)}>\n        <label>\n          <span>Contact name</span>\n          <input\n            className={css.contactInput}\n            type=\"text\"\n            placeholder=\"Contact's name\"\n            {...register('name', { required: true })}\n          />\n          <span>{errors.name?.message}</span>\n        </label>\n        <label>\n          <span>Number</span>\n          <input\n            className={css.contactInput}\n            type=\"text\"\n            placeholder=\"Contact's number\"\n            {...register('number')}\n          />\n          <span>{errors.number?.message}</span>\n        </label>\n        <button className={css.formButton} type=\"submit\">\n          Add\n        </button>\n      </form>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"contactListItem\":\"ContactList_contactListItem__3th7-\",\"deleteButton\":\"ContactList_deleteButton__3hT3n\",\"itemSpan\":\"ContactList_itemSpan__ZuNYO\"};","import { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { selectIsLoggedIn } from '../../redux/authSelectors';\n\nimport css from './ContactList.module.css';\n\nconst ContactList = ({ onRemoveContact }) => {\n  const { contacts } = useSelector(state => state.contacts);\n  const { filter } = useSelector(state => state.filter);\n  const isLogedIn = useSelector(selectIsLoggedIn);\n\n  const onFilterContacts = () => {\n    if (filter === '') return contacts;\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  const filteredContacts = onFilterContacts();\n\n  return (\n    <>\n      {isLogedIn ? (\n        <ul className={css.contactList}>\n          {filteredContacts.length > 0 ? (\n            filteredContacts.map(({ name, id, number }) => (\n              <li\n                className={css.contactListItem}\n                key={id}\n                name={name}\n                id={id}\n                number={number}\n              >\n                <span className={css.itemSpan}>{name}:</span>\n                <span className={css.itemSpan}>{number}</span>\n                <button\n                  className={css.deleteButton}\n                  type=\"button\"\n                  onClick={() => onRemoveContact(id)}\n                >\n                  Delete\n                </button>\n              </li>\n            ))\n          ) : (\n            <li>\n              <h2>Contact list is empty</h2>\n            </li>\n          )}\n        </ul>\n      ) : (\n        <Navigate to=\"/login\" replace />\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport { getContacts } from '../../redux/contactsOperations';\nimport { selectIsLoggedIn } from '../../redux/authSelectors';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLogedIn = useSelector(selectIsLoggedIn);\n\n  useEffect(() => {\n    if (isLogedIn) {\n      dispatch(getContacts());\n    }\n  }, [dispatch, isLogedIn]);\n\n  return (\n    <>\n      {isLogedIn && <ContactForm />}\n      <ContactList />\n    </>\n  );\n};\n\nexport default ContactsPage;\n","export const selectUser = state => state.auth.user;\nexport const selectError = state => state.auth.error;\nexport const selectLoading = state => state.auth.isLoading;\nexport const selectIsLoggedIn = state => state.auth.isLoggedIn;\nexport const selectIsRefreshing = state => state.auth.isRefreshing;\n"],"names":["schema","yup","name","min","max","required","number","ContactForm","_errors$name","_errors$number","_useForm","useForm","resolver","yupResolver","register","handleSubmit","reset","errors","formState","items","useSelector","state","contacts","dispatch","useDispatch","_jsx","children","_jsxs","className","css","onSubmit","data","find","_ref","toLowerCase","alert","concat","addContact","_objectSpread","type","placeholder","message","onRemoveContact","filter","isLogedIn","selectIsLoggedIn","filteredContacts","_ref2","includes","_Fragment","length","map","_ref3","id","onClick","Navigate","to","replace","useEffect","getContacts","ContactList","selectUser","auth","user","selectLoading","isLoading","isLoggedIn"],"sourceRoot":""}