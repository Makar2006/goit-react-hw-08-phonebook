{"version":3,"file":"static/js/994.c2eb32d0.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactItem.jsx","components/ContactList/ContactList.jsx","components/pages/ContactsPage.jsx","redux/authSelectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"ContactForm_contactForm__y0Rca\",\"formSpan\":\"ContactForm_formSpan__bT33Q\",\"formButton\":\"ContactForm_formButton__TN6Jq\",\"contactInput\":\"ContactForm_contactInput__z6XOX\"};","import { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport css from './ContactForm.module.css';\nimport { addContact } from '../../redux/contactsOperations';\n\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\n\nconst schema = yup\n  .object({\n    name: yup.string().min(4).max(15).required(),\n    number: yup.string().min(5).max(18).required(),\n  })\n  .required();\n\nexport default function ContactForm() {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n  const { items } = useSelector(state => state.contacts);\n\n  const dispatch = useDispatch();\n\n  const onSubmit = data => {\n    if (\n      items.find(({ name }) => name.toLowerCase() === data.name.toLowerCase())\n    ) {\n      alert(`${data.name} is already in contacts`);\n      reset();\n      return;\n    }\n\n    dispatch(addContact(data));\n\n    reset();\n  };\n\n  return (\n    <div>\n      <form className={css.contactForm} onSubmit={handleSubmit(onSubmit)}>\n        <label>\n          <span>Contact name</span>\n          <input\n            className={css.contactInput}\n            type=\"text\"\n            placeholder=\"Contact's name\"\n            {...register('name', { required: true })}\n          />\n          <span>{errors.name?.message}</span>\n        </label>\n        <label>\n          <span>Number</span>\n          <input\n            className={css.contactInput}\n            type=\"text\"\n            placeholder=\"Contact's number\"\n            {...register('number')}\n          />\n          <span>{errors.number?.message}</span>\n        </label>\n        <button className={css.formButton} type=\"submit\">\n          Add\n        </button>\n      </form>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"contactListItem\":\"ContactList_contactListItem__3th7-\",\"deleteButton\":\"ContactList_deleteButton__3hT3n\",\"itemSpan\":\"ContactList_itemSpan__ZuNYO\"};","import Loader from '../Loader/Loader';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from '../..//redux/contactsOperations';\nimport css from './ContactList.module.css';\n\nconst ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const { isLoading } = useSelector(state => state.contacts);\n  return (\n    <>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <li className={css.contactListItem}>\n          <span>{name}:</span>\n          <span>{number}</span>\n          <button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n            x\n          </button>\n        </li>\n      )}\n    </>\n  );\n};\n\nexport default ContactItem;\n","import { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { selectIsLoggedIn } from '../../redux/authSelectors';\n\nimport ContactItem from './ContactItem';\nimport css from './ContactList.module.css';\n\nconst ContactList = () => {\n  const { items } = useSelector(state => state.contacts);\n  const { filter } = useSelector(state => state.filter);\n  const isLogedIn = useSelector(selectIsLoggedIn);\n\n  const onFilterContacts = () => {\n    if (filter === '') return items;\n\n    return items.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  const filteredContacts = onFilterContacts();\n\n  return (\n    <>\n      {isLogedIn ? (\n        <ul className={css.contactList}>\n          {filteredContacts.length > 0 ? (\n            filteredContacts.map(({ name, id, number }) => (\n              <ContactItem key={id} name={name} id={id} number={number} />\n            ))\n          ) : (\n            <li>\n              <h2>Contact list is empty</h2>\n            </li>\n          )}\n        </ul>\n      ) : (\n        <Navigate to=\"/login\" replace />\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport { getContacts } from '../../redux/contactsOperations';\nimport { selectIsLoggedIn } from '../../redux/authSelectors';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLogedIn = useSelector(selectIsLoggedIn);\n\n  useEffect(() => {\n    if (isLogedIn) {\n      dispatch(getContacts());\n    }\n  }, [dispatch, isLogedIn]);\n\n  return (\n    <>\n      {isLogedIn && <ContactForm />}\n      <ContactList />\n    </>\n  );\n};\n\nexport default ContactsPage;\n","export const selectUser = state => state.auth.user;\nexport const selectError = state => state.auth.error;\nexport const selectLoading = state => state.auth.isLoading;\nexport const selectIsLoggedIn = state => state.auth.isLoggedIn;\nexport const selectIsRefreshing = state => state.auth.isRefreshing;\n"],"names":["schema","yup","name","min","max","required","number","ContactForm","_errors$name","_errors$number","_useForm","useForm","resolver","yupResolver","register","handleSubmit","reset","errors","formState","items","useSelector","state","contacts","dispatch","useDispatch","_jsx","children","_jsxs","className","css","onSubmit","data","find","_ref","toLowerCase","alert","concat","addContact","_objectSpread","type","placeholder","message","id","isLoading","_Fragment","Loader","onClick","deleteContact","filter","isLogedIn","selectIsLoggedIn","filteredContacts","includes","length","map","_ref2","ContactItem","Navigate","to","replace","useEffect","getContacts","ContactList","selectUser","auth","user","selectLoading","isLoggedIn"],"sourceRoot":""}